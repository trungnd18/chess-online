0 info it worked if it ends with ok
1 verbose cli [ 'c:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'c:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   'hiredis',
1 verbose cli   'redis' ]
2 info using npm@1.2.15
3 info using node@v0.10.1
4 verbose read json d:\project\chess\server\package.json
5 verbose read json d:\project\chess\server\node_modules\mongoskin\package.json
6 verbose read json d:\project\chess\server\node_modules\mysql\package.json
7 verbose read json d:\project\chess\server\node_modules\nodemon\package.json
8 verbose read json d:\project\chess\server\node_modules\redis\package.json
9 verbose read json d:\project\chess\server\node_modules\socket.io\package.json
10 verbose read json d:\project\chess\server\node_modules\socket.io-client\package.json
11 verbose read json d:\project\chess\server\package.json
12 verbose cache add [ 'hiredis', null ]
13 verbose cache add name=undefined spec="hiredis" args=["hiredis",null]
14 verbose parsed url { protocol: null,
14 verbose parsed url   slashes: null,
14 verbose parsed url   auth: null,
14 verbose parsed url   host: null,
14 verbose parsed url   port: null,
14 verbose parsed url   hostname: null,
14 verbose parsed url   hash: null,
14 verbose parsed url   search: null,
14 verbose parsed url   query: null,
14 verbose parsed url   pathname: 'hiredis',
14 verbose parsed url   path: 'hiredis',
14 verbose parsed url   href: 'hiredis' }
15 verbose cache add [ 'redis', null ]
16 verbose cache add name=undefined spec="redis" args=["redis",null]
17 verbose parsed url { protocol: null,
17 verbose parsed url   slashes: null,
17 verbose parsed url   auth: null,
17 verbose parsed url   host: null,
17 verbose parsed url   port: null,
17 verbose parsed url   hostname: null,
17 verbose parsed url   hash: null,
17 verbose parsed url   search: null,
17 verbose parsed url   query: null,
17 verbose parsed url   pathname: 'redis',
17 verbose parsed url   path: 'redis',
17 verbose parsed url   href: 'redis' }
18 silly lockFile 66e3de35-hiredis hiredis
19 verbose lock hiredis C:\Users\Tuan Minh\AppData\Roaming\npm-cache\66e3de35-hiredis.lock
20 silly lockFile b840fc02-redis redis
21 verbose lock redis C:\Users\Tuan Minh\AppData\Roaming\npm-cache\b840fc02-redis.lock
22 silly lockFile 66e3de35-hiredis hiredis
23 silly lockFile 66e3de35-hiredis hiredis
24 silly lockFile b840fc02-redis redis
25 silly lockFile b840fc02-redis redis
26 verbose addNamed [ 'redis', '' ]
27 verbose addNamed [ null, '' ]
28 silly lockFile fb3bbc27-redis redis@
29 verbose lock redis@ C:\Users\Tuan Minh\AppData\Roaming\npm-cache\fb3bbc27-redis.lock
30 verbose addNamed [ 'hiredis', '' ]
31 verbose addNamed [ null, '' ]
32 silly lockFile dc014615-hiredis hiredis@
33 verbose lock hiredis@ C:\Users\Tuan Minh\AppData\Roaming\npm-cache\dc014615-hiredis.lock
34 silly addNameRange { name: 'redis', range: '', hasData: false }
35 silly addNameRange { name: 'hiredis', range: '', hasData: false }
36 verbose url raw hiredis
37 verbose url resolving [ 'https://registry.npmjs.org/', './hiredis' ]
38 verbose url resolved https://registry.npmjs.org/hiredis
39 info trying registry request attempt 1 at 00:11:37
40 verbose etag "5PUZHL6JCPPFTUZOAVINN8INC"
41 http GET https://registry.npmjs.org/hiredis
42 verbose url raw redis
43 verbose url resolving [ 'https://registry.npmjs.org/', './redis' ]
44 verbose url resolved https://registry.npmjs.org/redis
45 info trying registry request attempt 1 at 00:11:38
46 verbose etag "AUBJS8L8AYHU417WP9R9ACTM2"
47 http GET https://registry.npmjs.org/redis
48 http 304 https://registry.npmjs.org/hiredis
49 silly registry.get cb [ 304,
49 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
49 silly registry.get     etag: '"5PUZHL6JCPPFTUZOAVINN8INC"',
49 silly registry.get     date: 'Wed, 02 Oct 2013 17:11:43 GMT',
49 silly registry.get     'content-length': '0' } ]
50 verbose etag hiredis from cache
51 http 304 https://registry.npmjs.org/redis
52 silly registry.get cb [ 304,
52 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
52 silly registry.get     etag: '"AUBJS8L8AYHU417WP9R9ACTM2"',
52 silly registry.get     date: 'Wed, 02 Oct 2013 17:11:43 GMT',
52 silly registry.get     'content-length': '0' } ]
53 verbose etag redis from cache
54 silly addNameRange number 2 { name: 'redis', range: '', hasData: true }
55 silly addNameRange versions [ 'redis',
55 silly addNameRange   [ '0.0.1',
55 silly addNameRange     '0.0.2',
55 silly addNameRange     '0.0.3',
55 silly addNameRange     '0.0.4',
55 silly addNameRange     '0.0.7',
55 silly addNameRange     '0.0.8',
55 silly addNameRange     '0.1.0',
55 silly addNameRange     '0.1.1',
55 silly addNameRange     '0.1.2',
55 silly addNameRange     '0.2.0',
55 silly addNameRange     '0.2.1',
55 silly addNameRange     '0.2.2',
55 silly addNameRange     '0.2.3',
55 silly addNameRange     '0.2.4',
55 silly addNameRange     '0.2.6',
55 silly addNameRange     '0.3.0',
55 silly addNameRange     '0.3.1',
55 silly addNameRange     '0.3.2',
55 silly addNameRange     '0.3.3',
55 silly addNameRange     '0.3.4',
55 silly addNameRange     '0.3.5',
55 silly addNameRange     '0.3.6',
55 silly addNameRange     '0.3.7',
55 silly addNameRange     '0.3.9',
55 silly addNameRange     '0.4.0',
55 silly addNameRange     '0.4.1',
55 silly addNameRange     '0.4.2',
55 silly addNameRange     '0.5.0',
55 silly addNameRange     '0.5.1',
55 silly addNameRange     '0.5.2',
55 silly addNameRange     '0.5.3',
55 silly addNameRange     '0.5.4',
55 silly addNameRange     '0.5.5',
55 silly addNameRange     '0.5.6',
55 silly addNameRange     '0.5.7',
55 silly addNameRange     '0.5.8',
55 silly addNameRange     '0.5.9',
55 silly addNameRange     '0.5.10',
55 silly addNameRange     '0.5.11',
55 silly addNameRange     '0.6.0',
55 silly addNameRange     '0.6.1',
55 silly addNameRange     '0.6.2',
55 silly addNameRange     '0.6.3',
55 silly addNameRange     '0.6.4',
55 silly addNameRange     '0.6.5',
55 silly addNameRange     '0.6.6',
55 silly addNameRange     '0.6.7',
55 silly addNameRange     '0.7.0',
55 silly addNameRange     '0.7.1',
55 silly addNameRange     '0.7.2',
55 silly addNameRange     '0.7.3',
55 silly addNameRange     '0.8.0',
55 silly addNameRange     '0.8.1',
55 silly addNameRange     '0.8.2',
55 silly addNameRange     '0.8.3',
55 silly addNameRange     '0.8.4',
55 silly addNameRange     '0.8.5' ] ]
56 verbose addNamed [ 'redis', '0.8.5' ]
57 verbose addNamed [ '0.8.5', '0.8.5' ]
58 silly lockFile 30d5a5e7-redis-0-8-5 redis@0.8.5
59 verbose lock redis@0.8.5 C:\Users\Tuan Minh\AppData\Roaming\npm-cache\30d5a5e7-redis-0-8-5.lock
60 silly addNameRange number 2 { name: 'hiredis', range: '', hasData: true }
61 silly addNameRange versions [ 'hiredis',
61 silly addNameRange   [ '0.1.0',
61 silly addNameRange     '0.1.1',
61 silly addNameRange     '0.1.2',
61 silly addNameRange     '0.1.3',
61 silly addNameRange     '0.1.4',
61 silly addNameRange     '0.1.5',
61 silly addNameRange     '0.1.6',
61 silly addNameRange     '0.1.8',
61 silly addNameRange     '0.1.9',
61 silly addNameRange     '0.1.10',
61 silly addNameRange     '0.1.12',
61 silly addNameRange     '0.1.13',
61 silly addNameRange     '0.1.14',
61 silly addNameRange     '0.1.15' ] ]
62 verbose addNamed [ 'hiredis', '0.1.15' ]
63 verbose addNamed [ '0.1.15', '0.1.15' ]
64 silly lockFile 7ce4b3b8-hiredis-0-1-15 hiredis@0.1.15
65 verbose lock hiredis@0.1.15 C:\Users\Tuan Minh\AppData\Roaming\npm-cache\7ce4b3b8-hiredis-0-1-15.lock
66 verbose read json C:\Users\Tuan Minh\AppData\Roaming\npm-cache\redis\0.8.5\package\package.json
67 verbose read json C:\Users\Tuan Minh\AppData\Roaming\npm-cache\hiredis\0.1.15\package\package.json
68 silly lockFile 7ce4b3b8-hiredis-0-1-15 hiredis@0.1.15
69 silly lockFile 7ce4b3b8-hiredis-0-1-15 hiredis@0.1.15
70 silly lockFile 30d5a5e7-redis-0-8-5 redis@0.8.5
71 silly lockFile 30d5a5e7-redis-0-8-5 redis@0.8.5
72 silly lockFile dc014615-hiredis hiredis@
73 silly lockFile dc014615-hiredis hiredis@
74 silly lockFile fb3bbc27-redis redis@
75 silly lockFile fb3bbc27-redis redis@
76 silly resolved [ { name: 'hiredis',
76 silly resolved     description: 'Wrapper for reply processing code in hiredis',
76 silly resolved     version: '0.1.15',
76 silly resolved     homepage: 'http://github.com/pietern/hiredis-node',
76 silly resolved     author: { name: 'Pieter Noordhuis', email: 'pcnoordhuis@gmail.com' },
76 silly resolved     main: 'hiredis',
76 silly resolved     scripts: { test: 'node test/reader.js', install: 'node-gyp rebuild' },
76 silly resolved     dependencies: { bindings: '*' },
76 silly resolved     engines: { node: '>= 0.6.0' },
76 silly resolved     gypfile: true,
76 silly resolved     readme: '# hiredis-node\n\nNode extension that wraps [hiredis][hiredis].\nBecause Node is already good at doing I/O, hiredis-node only provides\nbindings to the protocol parser.\nThe hiredis protocol parser is faster than JavaScript protocol parsers,\nbut the speedup only becomes noticable for large replies.\nIf you use Redis for simple SET/GET operations, there won\'t be a big\nbenefit to using hiredis.\nIf you use Redis for big SUNION/SINTER/LRANGE/ZRANGE operations, the\nbenefit to using hiredis-node can be significant.\n\n[hiredis]: http://github.com/antirez/hiredis\n\n## Install\n\nInstall with [NPM][npm]:\n\n```\nnpm install hiredis\n```\n\n[npm]: https://npmjs.org/\n\n## Usage\n\nhiredis-node works out of the box with Matt Ranney\'s [node_redis][node_redis].\nThe latter has an optional dependency on hiredis-node, so maybe you\'re\nalready using it without knowing.\n\nAlternatively, you can use it directly:\n\n```javascript\nvar hiredis = require("hiredis"),\n    reader = new hiredis.Reader();\n\n// Data comes in\nreader.feed("$5\\r\\nhello\\r\\n");\n\n// Reply comes out\nreader.get() // => "hello"\n```\n\nInstead of returning strings for bulk payloads, it can also return\nbuffers:\n\n```javascript\nvar hiredis = require("hiredis"),\n    reader = new hiredis.Reader({ return_buffers: true });\n\n// Data comes in\nreader.feed("$5\\r\\nhello\\r\\n");\n\n// Reply comes out\nreader.get() // => <Buffer 68 65 6c 6c 6f>\n```\n\n[node_redis]: http://github.com/mranney/node_redis\n\n## License\n\nThis code is released under the BSD license, after the license of hiredis.\n',
76 silly resolved     readmeFilename: 'README.md',
76 silly resolved     _id: 'hiredis@0.1.15',
76 silly resolved     _from: 'hiredis@' },
76 silly resolved   { name: 'redis',
76 silly resolved     version: '0.8.5',
76 silly resolved     description: 'Redis client library',
76 silly resolved     keywords: [ 'redis', 'database' ],
76 silly resolved     author: { name: 'Matt Ranney', email: 'mjr@ranney.com' },
76 silly resolved     main: './index.js',
76 silly resolved     scripts: { test: 'node ./test.js' },
76 silly resolved     devDependencies: { metrics: '>=0.1.5', colors: '~0.6.0-1', underscore: '~1.4.4' },
76 silly resolved     repository: { type: 'git', url: 'git://github.com/mranney/node_redis.git' },
76 silly resolved     readme: 'redis - a node.js redis client\n===========================\n\nThis is a complete Redis client for node.js.  It supports all Redis commands, including many recently added commands like EVAL from\nexperimental Redis server branches.\n\n\nInstall with:\n\n    npm install redis\n\nPieter Noordhuis has provided a binding to the official `hiredis` C library, which is non-blocking and fast.  To use `hiredis`, do:\n\n    npm install hiredis redis\n\nIf `hiredis` is installed, `node_redis` will use it by default.  Otherwise, a pure JavaScript parser will be used.\n\nIf you use `hiredis`, be sure to rebuild it whenever you upgrade your version of node.  There are mysterious failures that can\nhappen between node and native code modules after a node upgrade.\n\n\n## Usage\n\nSimple example, included as `examples/simple.js`:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    // if you\'d like to select database 3, instead of 0 (default), call\n    // client.select(3, function() { /* ... */ });\n\n    client.on("error", function (err) {\n        console.log("Error " + err);\n    });\n\n    client.set("string key", "string val", redis.print);\n    client.hset("hash key", "hashtest 1", "some value", redis.print);\n    client.hset(["hash key", "hashtest 2", "some other value"], redis.print);\n    client.hkeys("hash key", function (err, replies) {\n        console.log(replies.length + " replies:");\n        replies.forEach(function (reply, i) {\n            console.log("    " + i + ": " + reply);\n        });\n        client.quit();\n    });\n```\n\nThis will display:\n\n    mjr:~/work/node_redis (master)$ node example.js\n    Reply: OK\n    Reply: 0\n    Reply: 0\n    2 replies:\n        0: hashtest 1\n        1: hashtest 2\n    mjr:~/work/node_redis (master)$\n\n\n## Performance\n\nHere are typical results of `multi_bench.js` which is similar to `redis-benchmark` from the Redis distribution.\nIt uses 50 concurrent connections with no pipelining.\n\nJavaScript parser:\n\n    PING: 20000 ops 42283.30 ops/sec 0/5/1.182\n    SET: 20000 ops 32948.93 ops/sec 1/7/1.515\n    GET: 20000 ops 28694.40 ops/sec 0/9/1.740\n    INCR: 20000 ops 39370.08 ops/sec 0/8/1.269\n    LPUSH: 20000 ops 36429.87 ops/sec 0/8/1.370\n    LRANGE (10 elements): 20000 ops 9891.20 ops/sec 1/9/5.048\n    LRANGE (100 elements): 20000 ops 1384.56 ops/sec 10/91/36.072\n\nhiredis parser:\n\n    PING: 20000 ops 46189.38 ops/sec 1/4/1.082\n    SET: 20000 ops 41237.11 ops/sec 0/6/1.210\n    GET: 20000 ops 39682.54 ops/sec 1/7/1.257\n    INCR: 20000 ops 40080.16 ops/sec 0/8/1.242\n    LPUSH: 20000 ops 41152.26 ops/sec 0/3/1.212\n    LRANGE (10 elements): 20000 ops 36563.07 ops/sec 1/8/1.363\n    LRANGE (100 elements): 20000 ops 21834.06 ops/sec 0/9/2.287\n\nThe performance of `node_redis` improves dramatically with pipelining, which happens automatically in most normal programs.\n\n\n### Sending Commands\n\nEach Redis command is exposed as a function on the `client` object.\nAll functions take either an `args` Array plus optional `callback` Function or\na variable number of individual arguments followed by an optional callback.\nHere is an example of passing an array of arguments and a callback:\n\n    client.mset(["test keys 1", "test val 1", "test keys 2", "test val 2"], function (err, res) {});\n\nHere is that same call in the second style:\n\n    client.mset("test keys 1", "test val 1", "test keys 2", "test val 2", function (err, res) {});\n\nNote that in either form the `callback` is optional:\n\n    client.set("some key", "some val");\n    client.set(["some other key", "some val"]);\n\nIf the key is missing, reply will be null (probably):\n\n    client.get("missingkey", function(err, reply) {\n        // reply is null when the key is missing\n        console.log(reply);\n    });\n\nFor a list of Redis commands, see [Redis Command Reference](http://redis.io/commands)\n\nThe commands can be specified in uppercase or lowercase for convenience.  `client.get()` is the same as `client.GET()`.\n\nMinimal parsing is done on the replies.  Commands that return a single line reply return JavaScript Strings,\ninteger replies return JavaScript Numbers, "bulk" replies return node Buffers, and "multi bulk" replies return a\nJavaScript Array of node Buffers.  `HGETALL` returns an Object with Buffers keyed by the hash keys.\n\n# API\n\n## Connection Events\n\n`client` will emit some events about the state of the connection to the Redis server.\n\n### "ready"\n\n`client` will emit `ready` a connection is established to the Redis server and the server reports\nthat it is ready to receive commands.  Commands issued before the `ready` event are queued,\nthen replayed just before this event is emitted.\n\n### "connect"\n\n`client` will emit `connect` at the same time as it emits `ready` unless `client.options.no_ready_check`\nis set.  If this options is set, `connect` will be emitted when the stream is connected, and then\nyou are free to try to send commands.\n\n### "error"\n\n`client` will emit `error` when encountering an error connecting to the Redis server.\n\nNote that "error" is a special event type in node.  If there are no listeners for an\n"error" event, node will exit.  This is usually what you want, but it can lead to some\ncryptic error messages like this:\n\n    mjr:~/work/node_redis (master)$ node example.js\n\n    node.js:50\n        throw e;\n        ^\n    Error: ECONNREFUSED, Connection refused\n        at IOWatcher.callback (net:870:22)\n        at node.js:607:9\n\nNot very useful in diagnosing the problem, but if your program isn\'t ready to handle this,\nit is probably the right thing to just exit.\n\n`client` will also emit `error` if an exception is thrown inside of `node_redis` for whatever reason.\nIt would be nice to distinguish these two cases.\n\n### "end"\n\n`client` will emit `end` when an established Redis server connection has closed.\n\n### "drain"\n\n`client` will emit `drain` when the TCP connection to the Redis server has been buffering, but is now\nwritable.  This event can be used to stream commands in to Redis and adapt to backpressure.  Right now,\nyou need to check `client.command_queue.length` to decide when to reduce your send rate.  Then you can\nresume sending when you get `drain`.\n\n### "idle"\n\n`client` will emit `idle` when there are no outstanding commands that are awaiting a response.\n\n## redis.createClient(port, host, options)\n\nCreate a new client connection.  `port` defaults to `6379` and `host` defaults\nto `127.0.0.1`.  If you have `redis-server` running on the same computer as node, then the defaults for\nport and host are probably fine.  `options` in an object with the following possible properties:\n\n* `parser`: which Redis protocol reply parser to use.  Defaults to `hiredis` if that module is installed.\nThis may also be set to `javascript`.\n* `return_buffers`: defaults to `false`.  If set to `true`, then all replies will be sent to callbacks as node Buffer\nobjects instead of JavaScript Strings.\n* `detect_buffers`: default to `false`. If set to `true`, then replies will be sent to callbacks as node Buffer objects\nif any of the input arguments to the original command were Buffer objects.\nThis option lets you switch between Buffers and Strings on a per-command basis, whereas `return_buffers` applies to\nevery command on a client.\n* `socket_nodelay`: defaults to `true`. Whether to call setNoDelay() on the TCP stream, which disables the\nNagle algorithm on the underlying socket.  Setting this option to `false` can result in additional throughput at the\ncost of more latency.  Most applications will want this set to `true`.\n* `no_ready_check`: defaults to `false`. When a connection is established to the Redis server, the server might still\nbe loading the database from disk.  While loading, the server not respond to any commands.  To work around this,\n`node_redis` has a "ready check" which sends the `INFO` command to the server.  The response from the `INFO` command\nindicates whether the server is ready for more commands.  When ready, `node_redis` emits a `ready` event.\nSetting `no_ready_check` to `true` will inhibit this check.\n* `enable_offline_queue`: defaults to `true`. By default, if there is no active\nconnection to the redis server, commands are added to a queue and are executed\nonce the connection has been established. Setting `enable_offline_queue` to\n`false` will disable this feature and the callback will be execute immediately\nwith an error, or an error will be thrown if no callback is specified.\n* `retry_max_delay`: defaults to `null`. By default every time the client tries to connect and fails time before\nreconnection (delay) almost doubles. This delay normally grows infinitely, but setting `retry_max_delay` limits delay\nto maximum value, provided in milliseconds.\n* `connect_timeout` defaults to `false`. By default client will try reconnecting until connected. Setting `connect_timeout`\nlimits total time for client to reconnect. Value is provided in milliseconds and is counted once the disconnect occured.\n* `max_attempts` defaults to `null`. By default client will try reconnecting until connected. Setting `max_attempts`\nlimits total amount of reconnects.\n* `auth_pass` defaults to `null`. By default client will try connecting without auth. If set, client will run redis auth command on connect.\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient(null, null, {detect_buffers: true});\n\n    client.set("foo_rand000000000000", "OK");\n\n    // This will return a JavaScript String\n    client.get("foo_rand000000000000", function (err, reply) {\n        console.log(reply.toString()); // Will print `OK`\n    });\n\n    // This will return a Buffer since original key is specified as a Buffer\n    client.get(new Buffer("foo_rand000000000000"), function (err, reply) {\n        console.log(reply.toString()); // Will print `<Buffer 4f 4b>`\n    });\n    client.end();\n```\n\n`createClient()` returns a `RedisClient` object that is named `client` in all of the examples here.\n\n## client.auth(password, callback)\n\nWhen connecting to Redis servers that require authentication, the `AUTH` command must be sent as the\nfirst command after connecting.  This can be tricky to coordinate with reconnections, the ready check,\netc.  To make this easier, `client.auth()` stashes `password` and will send it after each connection,\nincluding reconnections.  `callback` is invoked only once, after the response to the very first\n`AUTH` command sent.\nNOTE: Your call to `client.auth()` should not be inside the ready handler. If\nyou are doing this wrong, `client` will emit an error that looks\nsomething like this `Error: Ready check failed: ERR operation not permitted`.\n\n## client.end()\n\nForcibly close the connection to the Redis server.  Note that this does not wait until all replies have been parsed.\nIf you want to exit cleanly, call `client.quit()` to send the `QUIT` command after you have handled all replies.\n\nThis example closes the connection to the Redis server before the replies have been read.  You probably don\'t\nwant to do this:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    client.set("foo_rand000000000000", "some fantastic value");\n    client.get("foo_rand000000000000", function (err, reply) {\n        console.log(reply.toString());\n    });\n    client.end();\n```\n\n`client.end()` is useful for timeout cases where something is stuck or taking too long and you want\nto start over.\n\n## Friendlier hash commands\n\nMost Redis commands take a single String or an Array of Strings as arguments, and replies are sent back as a single String or an Array of Strings.\nWhen dealing with hash values, there are a couple of useful exceptions to this.\n\n### client.hgetall(hash)\n\nThe reply from an HGETALL command will be converted into a JavaScript Object by `node_redis`.  That way you can interact\nwith the responses using JavaScript syntax.\n\nExample:\n\n    client.hmset("hosts", "mjr", "1", "another", "23", "home", "1234");\n    client.hgetall("hosts", function (err, obj) {\n        console.dir(obj);\n    });\n\nOutput:\n\n    { mjr: \'1\', another: \'23\', home: \'1234\' }\n\n### client.hmset(hash, obj, [callback])\n\nMultiple values in a hash can be set by supplying an object:\n\n    client.HMSET(key2, {\n        "0123456789": "abcdefghij", // NOTE: key and value will be coerced to strings\n        "some manner of key": "a type of value"\n    });\n\nThe properties and values of this Object will be set as keys and values in the Redis hash.\n\n### client.hmset(hash, key1, val1, ... keyn, valn, [callback])\n\nMultiple values may also be set by supplying a list:\n\n    client.HMSET(key1, "0123456789", "abcdefghij", "some manner of key", "a type of value");\n\n\n## Publish / Subscribe\n\nHere is a simple example of the API for publish / subscribe.  This program opens two\nclient connections, subscribes to a channel on one of them, and publishes to that\nchannel on the other:\n\n```js\n    var redis = require("redis"),\n        client1 = redis.createClient(), client2 = redis.createClient(),\n        msg_count = 0;\n\n    client1.on("subscribe", function (channel, count) {\n        client2.publish("a nice channel", "I am sending a message.");\n        client2.publish("a nice channel", "I am sending a second message.");\n        client2.publish("a nice channel", "I am sending my last message.");\n    });\n\n    client1.on("message", function (channel, message) {\n        console.log("client1 channel " + channel + ": " + message);\n        msg_count += 1;\n        if (msg_count === 3) {\n            client1.unsubscribe();\n            client1.end();\n            client2.end();\n        }\n    });\n\n    client1.incr("did a thing");\n    client1.subscribe("a nice channel");\n```\n\nWhen a client issues a `SUBSCRIBE` or `PSUBSCRIBE`, that connection is put into a "subscriber" mode.\nAt that point, only commands that modify the subscription set are valid.  When the subscription\nset is empty, the connection is put back into regular mode.\n\nIf you need to send regular commands to Redis while in subscriber mode, just open another connection.\n\n## Subscriber Events\n\nIf a client has subscriptions active, it may emit these events:\n\n### "message" (channel, message)\n\nClient will emit `message` for every message received that matches an active subscription.\nListeners are passed the channel name as `channel` and the message Buffer as `message`.\n\n### "pmessage" (pattern, channel, message)\n\nClient will emit `pmessage` for every message received that matches an active subscription pattern.\nListeners are passed the original pattern used with `PSUBSCRIBE` as `pattern`, the sending channel\nname as `channel`, and the message Buffer as `message`.\n\n### "subscribe" (channel, count)\n\nClient will emit `subscribe` in response to a `SUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.\n\n### "psubscribe" (pattern, count)\n\nClient will emit `psubscribe` in response to a `PSUBSCRIBE` command.  Listeners are passed the\noriginal pattern as `pattern`, and the new count of subscriptions for this client as `count`.\n\n### "unsubscribe" (channel, count)\n\nClient will emit `unsubscribe` in response to a `UNSUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.  When\n`count` is 0, this client has left subscriber mode and no more subscriber events will be emitted.\n\n### "punsubscribe" (pattern, count)\n\nClient will emit `punsubscribe` in response to a `PUNSUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.  When\n`count` is 0, this client has left subscriber mode and no more subscriber events will be emitted.\n\n## client.multi([commands])\n\n`MULTI` commands are queued up until an `EXEC` is issued, and then all commands are run atomically by\nRedis.  The interface in `node_redis` is to return an individual `Multi` object by calling `client.multi()`.\n\n```js\n    var redis  = require("./index"),\n        client = redis.createClient(), set_size = 20;\n\n    client.sadd("bigset", "a member");\n    client.sadd("bigset", "another member");\n\n    while (set_size > 0) {\n        client.sadd("bigset", "member " + set_size);\n        set_size -= 1;\n    }\n\n    // multi chain with an individual callback\n    client.multi()\n        .scard("bigset")\n        .smembers("bigset")\n        .keys("*", function (err, replies) {\n            // NOTE: code in this callback is NOT atomic\n            // this only happens after the the .exec call finishes.\n            client.mget(replies, redis.print);\n        })\n        .dbsize()\n        .exec(function (err, replies) {\n            console.log("MULTI got " + replies.length + " replies");\n            replies.forEach(function (reply, index) {\n                console.log("Reply " + index + ": " + reply.toString());\n            });\n        });\n```\n\n### Multi.exec( callback )\n\n`client.multi()` is a constructor that returns a `Multi` object.  `Multi` objects share all of the\nsame command methods as `client` objects do.  Commands are queued up inside the `Multi` object\nuntil `Multi.exec()` is invoked.\n\nThe `callback` of `.exec()` will get invoked with two arguments:\n\n* `err` **type:** `null | Array` err is either null or an array of Error Objects corresponding the the sequence the commands where chained. The last item of the array will always be an `EXECABORT` type of error originating from the `.exec()` itself.\n* `results` **type:** `null | Array` results is an array of responses corresponding the the sequence the commands where chained.\n\nYou can either chain together `MULTI` commands as in the above example, or you can queue individual\ncommands while still sending regular client command as in this example:\n\n```js\n    var redis  = require("redis"),\n        client = redis.createClient(), multi;\n\n    // start a separate multi command queue\n    multi = client.multi();\n    multi.incr("incr thing", redis.print);\n    multi.incr("incr other thing", redis.print);\n\n    // runs immediately\n    client.mset("incr thing", 100, "incr other thing", 1, redis.print);\n\n    // drains multi queue and runs atomically\n    multi.exec(function (err, replies) {\n        console.log(replies); // 101, 2\n    });\n\n    // you can re-run the same transaction if you like\n    multi.exec(function (err, replies) {\n        console.log(replies); // 102, 3\n        client.quit();\n    });\n```\n\nIn addition to adding commands to the `MULTI` queue individually, you can also pass an array\nof commands and arguments to the constructor:\n\n```js\n    var redis  = require("redis"),\n        client = redis.createClient(), multi;\n\n    client.multi([\n        ["mget", "multifoo", "multibar", redis.print],\n        ["incr", "multifoo"],\n        ["incr", "multibar"]\n    ]).exec(function (err, replies) {\n        console.log(replies);\n    });\n```\n\n\n## Monitor mode\n\nRedis supports the `MONITOR` command, which lets you see all commands received by the Redis server\nacross all client connections, including from other client libraries and other computers.\n\nAfter you send the `MONITOR` command, no other commands are valid on that connection.  `node_redis`\nwill emit a `monitor` event for every new monitor message that comes across.  The callback for the\n`monitor` event takes a timestamp from the Redis server and an array of command arguments.\n\nHere is a simple example:\n\n```js\n    var client  = require("redis").createClient(),\n        util = require("util");\n\n    client.monitor(function (err, res) {\n        console.log("Entering monitoring mode.");\n    });\n\n    client.on("monitor", function (time, args) {\n        console.log(time + ": " + util.inspect(args));\n    });\n```\n\n# Extras\n\nSome other things you might like to know about.\n\n## client.server_info\n\nAfter the ready probe completes, the results from the INFO command are saved in the `client.server_info`\nobject.\n\nThe `versions` key contains an array of the elements of the version string for easy comparison.\n\n    > client.server_info.redis_version\n    \'2.3.0\'\n    > client.server_info.versions\n    [ 2, 3, 0 ]\n\n## redis.print()\n\nA handy callback function for displaying return values when testing.  Example:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    client.on("connect", function () {\n        client.set("foo_rand000000000000", "some fantastic value", redis.print);\n        client.get("foo_rand000000000000", redis.print);\n    });\n```\n\nThis will print:\n\n    Reply: OK\n    Reply: some fantastic value\n\nNote that this program will not exit cleanly because the client is still connected.\n\n## redis.debug_mode\n\nBoolean to enable debug mode and protocol tracing.\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    redis.debug_mode = true;\n\n    client.on("connect", function () {\n        client.set("foo_rand000000000000", "some fantastic value");\n    });\n```\n\nThis will display:\n\n    mjr:~/work/node_redis (master)$ node ~/example.js\n    send command: *3\n    $3\n    SET\n    $20\n    foo_rand000000000000\n    $20\n    some fantastic value\n\n    on_data: +OK\n\n`send command` is data sent into Redis and `on_data` is data received from Redis.\n\n## Multi-word commands\n\nTo execute redis multi-word commands like `SCRIPT LOAD` or `CLIENT LIST` pass\nthe second word as first parameter:\n\n    client.script(\'load\', \'return 1\');\n    client.multi().script(\'load\', \'return 1\').exec(...);\n    client.multi([[\'script\', \'load\', \'return 1\']]).exec(...);\n\n## client.send_command(command_name, args, callback)\n\nUsed internally to send commands to Redis.  For convenience, nearly all commands that are published on the Redis\nWiki have been added to the `client` object.  However, if I missed any, or if new commands are introduced before\nthis library is updated, you can use `send_command()` to send arbitrary commands to Redis.\n\nAll commands are sent as multi-bulk commands.  `args` can either be an Array of arguments, or omitted.\n\n## client.connected\n\nBoolean tracking the state of the connection to the Redis server.\n\n## client.command_queue.length\n\nThe number of commands that have been sent to the Redis server but not yet replied to.  You can use this to\nenforce some kind of maximum queue depth for commands while connected.\n\nDon\'t mess with `client.command_queue` though unless you really know what you are doing.\n\n## client.offline_queue.length\n\nThe number of commands that have been queued up for a future connection.  You can use this to enforce\nsome kind of maximum queue depth for pre-connection commands.\n\n## client.retry_delay\n\nCurrent delay in milliseconds before a connection retry will be attempted.  This starts at `250`.\n\n## client.retry_backoff\n\nMultiplier for future retry timeouts.  This should be larger than 1 to add more time between retries.\nDefaults to 1.7.  The default initial connection retry is 250, so the second retry will be 425, followed by 723.5, etc.\n\n### Commands with Optional and Keyword arguments\n\nThis applies to anything that uses an optional `[WITHSCORES]` or `[LIMIT offset count]` in the [redis.io/commands](http://redis.io/commands) documentation.\n\nExample:\n```js\nvar args = [ \'myzset\', 1, \'one\', 2, \'two\', 3, \'three\', 99, \'ninety-nine\' ];\nclient.zadd(args, function (err, response) {\n    if (err) throw err;\n    console.log(\'added \'+response+\' items.\');\n\n    // -Infinity and +Infinity also work\n    var args1 = [ \'myzset\', \'+inf\', \'-inf\' ];\n    client.zrevrangebyscore(args1, function (err, response) {\n        if (err) throw err;\n        console.log(\'example1\', response);\n        // write your code here\n    });\n\n    var max = 3, min = 1, offset = 1, count = 2;\n    var args2 = [ \'myzset\', max, min, \'WITHSCORES\', \'LIMIT\', offset, count ];\n    client.zrevrangebyscore(args2, function (err, response) {\n        if (err) throw err;\n        console.log(\'example2\', response);\n        // write your code here\n    });\n});\n```\n\n## TODO\n\nBetter tests for auth, disconnect/reconnect, and all combinations thereof.\n\nStream large set/get values into and out of Redis.  Otherwise the entire value must be in node\'s memory.\n\nPerformance can be better for very large values.\n\nI think there are more performance improvements left in there for smaller values, especially for large lists of small values.\n\n## How to Contribute\n- open a pull request and then wait for feedback (if\n  [DTrejo](http://github.com/dtrejo) does not get back to you within 2 days,\n  comment again with indignation!)\n\n## Contributors\nSome people have have added features and fixed bugs in `node_redis` other than me.\n\nOrdered by date of first contribution.\n[Auto-generated](http://github.com/dtrejo/node-authors) on Wed Jul 25 2012 19:14:59 GMT-0700 (PDT).\n\n- [Matt Ranney aka `mranney`](https://github.com/mranney)\n- [Tim-Smart aka `tim-smart`](https://github.com/tim-smart)\n- [Tj Holowaychuk aka `visionmedia`](https://github.com/visionmedia)\n- [rick aka `technoweenie`](https://github.com/technoweenie)\n- [Orion Henry aka `orionz`](https://github.com/orionz)\n- [Aivo Paas aka `aivopaas`](https://github.com/aivopaas)\n- [Hank Sims aka `hanksims`](https://github.com/hanksims)\n- [Paul Carey aka `paulcarey`](https://github.com/paulcarey)\n- [Pieter Noordhuis aka `pietern`](https://github.com/pietern)\n- [nithesh aka `nithesh`](https://github.com/nithesh)\n- [Andy Ray aka `andy2ray`](https://github.com/andy2ray)\n- [unknown aka `unknowdna`](https://github.com/unknowdna)\n- [Dave Hoover aka `redsquirrel`](https://github.com/redsquirrel)\n- [Vladimir Dronnikov aka `dvv`](https://github.com/dvv)\n- [Umair Siddique aka `umairsiddique`](https://github.com/umairsiddique)\n- [Louis-Philippe Perron aka `lp`](https://github.com/lp)\n- [Mark Dawson aka `markdaws`](https://github.com/markdaws)\n- [Ian Babrou aka `bobrik`](https://github.com/bobrik)\n- [Felix Geisendörfer aka `felixge`](https://github.com/felixge)\n- [Jean-Hugues Pinson aka `undefined`](https://github.com/undefined)\n- [Maksim Lin aka `maks`](https://github.com/maks)\n- [Owen Smith aka `orls`](https://github.com/orls)\n- [Zachary Scott aka `zzak`](https://github.com/zzak)\n- [TEHEK Firefox aka `TEHEK`](https://github.com/TEHEK)\n- [Isaac Z. Schlueter aka `isaacs`](https://github.com/isaacs)\n- [David Trejo aka `DTrejo`](https://github.com/DTrejo)\n- [Brian Noguchi aka `bnoguchi`](https://github.com/bnoguchi)\n- [Philip Tellis aka `bluesmoon`](https://github.com/bluesmoon)\n- [Marcus Westin aka `marcuswestin2`](https://github.com/marcuswestin2)\n- [Jed Schmidt aka `jed`](https://github.com/jed)\n- [Dave Peticolas aka `jdavisp3`](https://github.com/jdavisp3)\n- [Trae Robrock aka `trobrock`](https://github.com/trobrock)\n- [Shankar Karuppiah aka `shankar0306`](https://github.com/shankar0306)\n- [Ignacio Burgueño aka `ignacio`](https://github.com/ignacio)\n\nThanks.\n\n## LICENSE - "MIT License"\n\nCopyright (c) 2010 Matthew Ranney, http://ranney.com/\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the "Software"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n![spacer](http://ranney.com/1px.gif)\n',
76 silly resolved     readmeFilename: 'README.md',
76 silly resolved     _id: 'redis@0.8.5',
76 silly resolved     _from: 'redis@' } ]
77 info install hiredis@0.1.15 into d:\project\chess\server
78 info install redis@0.8.5 into d:\project\chess\server
79 info installOne hiredis@0.1.15
80 info installOne redis@0.8.5
81 verbose from cache C:\Users\Tuan Minh\AppData\Roaming\npm-cache\hiredis\0.1.15\package\package.json
82 info d:\project\chess\server\node_modules\hiredis unbuild
83 verbose read json d:\project\chess\server\node_modules\hiredis\package.json
84 verbose from cache C:\Users\Tuan Minh\AppData\Roaming\npm-cache\redis\0.8.5\package\package.json
85 info d:\project\chess\server\node_modules\redis unbuild
86 verbose from cache d:\project\chess\server\node_modules\redis\package.json
87 info preuninstall redis@0.8.5
88 verbose tar unpack C:\Users\Tuan Minh\AppData\Roaming\npm-cache\hiredis\0.1.15\package.tgz
89 silly lockFile 2440990b-hess-server-node-modules-hiredis d:\project\chess\server\node_modules\hiredis
90 verbose lock d:\project\chess\server\node_modules\hiredis C:\Users\Tuan Minh\AppData\Roaming\npm-cache\2440990b-hess-server-node-modules-hiredis.lock
91 silly lockFile 606fc892-cache-hiredis-0-1-15-package-tgz C:\Users\Tuan Minh\AppData\Roaming\npm-cache\hiredis\0.1.15\package.tgz
92 verbose lock C:\Users\Tuan Minh\AppData\Roaming\npm-cache\hiredis\0.1.15\package.tgz C:\Users\Tuan Minh\AppData\Roaming\npm-cache\606fc892-cache-hiredis-0-1-15-package-tgz.lock
93 info uninstall redis@0.8.5
94 silly gunzTarPerm modes [ '755', '644' ]
95 verbose true,d:\project\chess\server\node_modules,d:\project\chess\server\node_modules unbuild redis@0.8.5
96 info postuninstall redis@0.8.5
97 silly gunzTarPerm extractEntry package.json
98 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
99 silly gunzTarPerm extractEntry README.md
100 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
101 silly gunzTarPerm extractEntry bench.js
102 silly gunzTarPerm modified mode [ 'bench.js', 438, 420 ]
103 silly gunzTarPerm extractEntry hiredis.js
104 silly gunzTarPerm modified mode [ 'hiredis.js', 438, 420 ]
105 silly gunzTarPerm extractEntry binding.gyp
106 silly gunzTarPerm modified mode [ 'binding.gyp', 438, 420 ]
107 verbose tar unpack C:\Users\Tuan Minh\AppData\Roaming\npm-cache\redis\0.8.5\package.tgz
108 silly lockFile 47e1f1ef--chess-server-node-modules-redis d:\project\chess\server\node_modules\redis
109 verbose lock d:\project\chess\server\node_modules\redis C:\Users\Tuan Minh\AppData\Roaming\npm-cache\47e1f1ef--chess-server-node-modules-redis.lock
110 silly lockFile 4b70c2b0-pm-cache-redis-0-8-5-package-tgz C:\Users\Tuan Minh\AppData\Roaming\npm-cache\redis\0.8.5\package.tgz
111 verbose lock C:\Users\Tuan Minh\AppData\Roaming\npm-cache\redis\0.8.5\package.tgz C:\Users\Tuan Minh\AppData\Roaming\npm-cache\4b70c2b0-pm-cache-redis-0-8-5-package-tgz.lock
112 silly gunzTarPerm modes [ '755', '644' ]
113 silly gunzTarPerm extractEntry package.json
114 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
115 silly gunzTarPerm extractEntry COPYING
116 silly gunzTarPerm modified mode [ 'COPYING', 438, 420 ]
117 silly gunzTarPerm extractEntry deps/hiredis/README.md
118 silly gunzTarPerm modified mode [ 'deps/hiredis/README.md', 438, 420 ]
119 silly gunzTarPerm extractEntry .npmignore
120 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
121 silly gunzTarPerm extractEntry README.md
122 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
123 silly gunzTarPerm extractEntry diff_multi_bench_output.js
124 silly gunzTarPerm modified mode [ 'diff_multi_bench_output.js', 438, 420 ]
125 silly gunzTarPerm extractEntry deps/hiredis/example.c
126 silly gunzTarPerm modified mode [ 'deps/hiredis/example.c', 438, 420 ]
127 silly gunzTarPerm extractEntry generate_commands.js
128 silly gunzTarPerm modified mode [ 'generate_commands.js', 438, 420 ]
129 silly gunzTarPerm extractEntry multi_bench.js
130 silly gunzTarPerm modified mode [ 'multi_bench.js', 438, 420 ]
131 silly gunzTarPerm extractEntry deps/hiredis/async.h
132 silly gunzTarPerm modified mode [ 'deps/hiredis/async.h', 438, 420 ]
133 silly gunzTarPerm extractEntry deps/hiredis/CHANGELOG.md
134 silly gunzTarPerm modified mode [ 'deps/hiredis/CHANGELOG.md', 438, 420 ]
135 silly gunzTarPerm extractEntry deps/hiredis/COPYING
136 silly gunzTarPerm modified mode [ 'deps/hiredis/COPYING', 438, 420 ]
137 silly gunzTarPerm extractEntry deps/hiredis/dict.c
138 silly gunzTarPerm modified mode [ 'deps/hiredis/dict.c', 438, 420 ]
139 silly gunzTarPerm extractEntry deps/hiredis/dict.h
140 silly gunzTarPerm modified mode [ 'deps/hiredis/dict.h', 438, 420 ]
141 silly gunzTarPerm extractEntry deps/hiredis/example-ae.c
142 silly gunzTarPerm modified mode [ 'deps/hiredis/example-ae.c', 438, 420 ]
143 silly gunzTarPerm extractEntry test.js
144 silly gunzTarPerm modified mode [ 'test.js', 438, 420 ]
145 silly gunzTarPerm extractEntry index.js
146 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
147 silly gunzTarPerm extractEntry deps/hiredis/example-libev.c
148 silly gunzTarPerm modified mode [ 'deps/hiredis/example-libev.c', 438, 420 ]
149 silly gunzTarPerm extractEntry deps/hiredis/example-libevent.c
150 silly gunzTarPerm modified mode [ 'deps/hiredis/example-libevent.c', 438, 420 ]
151 silly gunzTarPerm extractEntry lib/commands.js
152 silly gunzTarPerm modified mode [ 'lib/commands.js', 438, 420 ]
153 silly gunzTarPerm extractEntry lib/queue.js
154 silly gunzTarPerm modified mode [ 'lib/queue.js', 438, 420 ]
155 silly gunzTarPerm extractEntry deps/hiredis/async.c
156 silly gunzTarPerm modified mode [ 'deps/hiredis/async.c', 438, 420 ]
157 silly gunzTarPerm extractEntry deps/hiredis/fmacros.h
158 silly gunzTarPerm modified mode [ 'deps/hiredis/fmacros.h', 438, 420 ]
159 silly gunzTarPerm extractEntry lib/to_array.js
160 silly gunzTarPerm modified mode [ 'lib/to_array.js', 438, 420 ]
161 silly gunzTarPerm extractEntry lib/util.js
162 silly gunzTarPerm modified mode [ 'lib/util.js', 438, 420 ]
163 silly gunzTarPerm extractEntry deps/hiredis/hiredis.c
164 silly gunzTarPerm modified mode [ 'deps/hiredis/hiredis.c', 438, 420 ]
165 silly gunzTarPerm extractEntry deps/hiredis/hiredis.h
166 silly gunzTarPerm modified mode [ 'deps/hiredis/hiredis.h', 438, 420 ]
167 silly gunzTarPerm extractEntry lib/parser/hiredis.js
168 silly gunzTarPerm modified mode [ 'lib/parser/hiredis.js', 438, 420 ]
169 silly gunzTarPerm extractEntry lib/parser/javascript.js
170 silly gunzTarPerm modified mode [ 'lib/parser/javascript.js', 438, 420 ]
171 silly gunzTarPerm extractEntry deps/hiredis/Makefile
172 silly gunzTarPerm modified mode [ 'deps/hiredis/Makefile', 438, 420 ]
173 silly gunzTarPerm extractEntry deps/hiredis/net.c
174 silly gunzTarPerm modified mode [ 'deps/hiredis/net.c', 438, 420 ]
175 silly gunzTarPerm extractEntry deps/hiredis/net.h
176 silly gunzTarPerm modified mode [ 'deps/hiredis/net.h', 438, 420 ]
177 silly gunzTarPerm extractEntry deps/hiredis/adapters/ae.h
178 silly gunzTarPerm modified mode [ 'deps/hiredis/adapters/ae.h', 438, 420 ]
179 silly gunzTarPerm extractEntry deps/hiredis/adapters/libev.h
180 silly gunzTarPerm modified mode [ 'deps/hiredis/adapters/libev.h', 438, 420 ]
181 silly gunzTarPerm extractEntry deps/hiredis/adapters/libevent.h
182 silly gunzTarPerm modified mode [ 'deps/hiredis/adapters/libevent.h', 438, 420 ]
183 silly gunzTarPerm extractEntry deps/hiredis/sds.c
184 silly gunzTarPerm modified mode [ 'deps/hiredis/sds.c', 438, 420 ]
185 silly gunzTarPerm extractEntry deps/hiredis/sds.h
186 silly gunzTarPerm modified mode [ 'deps/hiredis/sds.h', 438, 420 ]
187 silly gunzTarPerm extractEntry deps/hiredis/test.c
188 silly gunzTarPerm modified mode [ 'deps/hiredis/test.c', 438, 420 ]
189 silly gunzTarPerm extractEntry deps/hiredis.gyp
190 silly gunzTarPerm modified mode [ 'deps/hiredis.gyp', 438, 420 ]
191 silly gunzTarPerm extractEntry benches/buffer_bench.js
192 silly gunzTarPerm modified mode [ 'benches/buffer_bench.js', 438, 420 ]
193 silly gunzTarPerm extractEntry benches/hiredis_parser.js
194 silly gunzTarPerm modified mode [ 'benches/hiredis_parser.js', 438, 420 ]
195 silly gunzTarPerm extractEntry src/hiredis.cc
196 silly gunzTarPerm modified mode [ 'src/hiredis.cc', 438, 420 ]
197 silly gunzTarPerm extractEntry src/reader.cc
198 silly gunzTarPerm modified mode [ 'src/reader.cc', 438, 420 ]
199 silly gunzTarPerm extractEntry src/reader.h
200 silly gunzTarPerm modified mode [ 'src/reader.h', 438, 420 ]
201 silly gunzTarPerm extractEntry test/reader.js
202 silly gunzTarPerm modified mode [ 'test/reader.js', 438, 420 ]
203 silly gunzTarPerm extractEntry benches/reconnect_test.js
204 silly gunzTarPerm modified mode [ 'benches/reconnect_test.js', 438, 420 ]
205 silly gunzTarPerm extractEntry benches/re_sub_test.js
206 silly gunzTarPerm modified mode [ 'benches/re_sub_test.js', 438, 420 ]
207 silly gunzTarPerm extractEntry benches/sub_quit_test.js
208 silly gunzTarPerm modified mode [ 'benches/sub_quit_test.js', 438, 420 ]
209 silly gunzTarPerm extractEntry benches/stress/codec.js
210 silly gunzTarPerm modified mode [ 'benches/stress/codec.js', 438, 420 ]
211 silly gunzTarPerm extractEntry benches/stress/pubsub/pub.js
212 silly gunzTarPerm modified mode [ 'benches/stress/pubsub/pub.js', 438, 420 ]
213 silly gunzTarPerm extractEntry benches/stress/pubsub/server.js
214 silly gunzTarPerm modified mode [ 'benches/stress/pubsub/server.js', 438, 420 ]
215 silly gunzTarPerm extractEntry benches/stress/pubsub/run
216 silly gunzTarPerm modified mode [ 'benches/stress/pubsub/run', 438, 420 ]
217 silly gunzTarPerm extractEntry benches/stress/rpushblpop/pub.js
218 silly gunzTarPerm modified mode [ 'benches/stress/rpushblpop/pub.js', 438, 420 ]
219 silly gunzTarPerm extractEntry benches/stress/rpushblpop/server.js
220 silly gunzTarPerm modified mode [ 'benches/stress/rpushblpop/server.js', 438, 420 ]
221 silly gunzTarPerm extractEntry benches/stress/rpushblpop/run
222 silly gunzTarPerm modified mode [ 'benches/stress/rpushblpop/run', 438, 420 ]
223 silly gunzTarPerm extractEntry benches/stress/speed/speed.js
224 silly gunzTarPerm modified mode [ 'benches/stress/speed/speed.js', 438, 420 ]
225 silly gunzTarPerm extractEntry benches/stress/speed/00
226 silly gunzTarPerm modified mode [ 'benches/stress/speed/00', 438, 420 ]
227 silly gunzTarPerm extractEntry benches/stress/speed/plot
228 silly gunzTarPerm modified mode [ 'benches/stress/speed/plot', 438, 420 ]
229 silly gunzTarPerm extractEntry benches/stress/speed/size-rate.png
230 silly gunzTarPerm modified mode [ 'benches/stress/speed/size-rate.png', 438, 420 ]
231 silly gunzTarPerm extractEntry examples/auth.js
232 silly gunzTarPerm modified mode [ 'examples/auth.js', 438, 420 ]
233 silly gunzTarPerm extractEntry examples/mget.js
234 silly gunzTarPerm modified mode [ 'examples/mget.js', 438, 420 ]
235 silly gunzTarPerm extractEntry examples/monitor.js
236 silly gunzTarPerm modified mode [ 'examples/monitor.js', 438, 420 ]
237 silly gunzTarPerm extractEntry examples/multi.js
238 silly gunzTarPerm modified mode [ 'examples/multi.js', 438, 420 ]
239 silly gunzTarPerm extractEntry examples/file.js
240 silly gunzTarPerm modified mode [ 'examples/file.js', 438, 420 ]
241 silly gunzTarPerm extractEntry examples/psubscribe.js
242 silly gunzTarPerm modified mode [ 'examples/psubscribe.js', 438, 420 ]
243 silly gunzTarPerm extractEntry examples/pub_sub.js
244 silly gunzTarPerm modified mode [ 'examples/pub_sub.js', 438, 420 ]
245 silly gunzTarPerm extractEntry examples/simple.js
246 silly gunzTarPerm modified mode [ 'examples/simple.js', 438, 420 ]
247 silly gunzTarPerm extractEntry examples/sort.js
248 silly gunzTarPerm modified mode [ 'examples/sort.js', 438, 420 ]
249 silly gunzTarPerm extractEntry examples/subqueries.js
250 silly gunzTarPerm modified mode [ 'examples/subqueries.js', 438, 420 ]
251 silly gunzTarPerm extractEntry examples/extend.js
252 silly gunzTarPerm modified mode [ 'examples/extend.js', 438, 420 ]
253 silly gunzTarPerm extractEntry examples/subquery.js
254 silly gunzTarPerm modified mode [ 'examples/subquery.js', 438, 420 ]
255 silly gunzTarPerm extractEntry examples/eval.js
256 silly gunzTarPerm modified mode [ 'examples/eval.js', 438, 420 ]
257 silly gunzTarPerm extractEntry examples/unix_socket.js
258 silly gunzTarPerm modified mode [ 'examples/unix_socket.js', 438, 420 ]
259 silly gunzTarPerm extractEntry examples/backpressure_drain.js
260 silly gunzTarPerm modified mode [ 'examples/backpressure_drain.js', 438, 420 ]
261 silly gunzTarPerm extractEntry examples/web_server.js
262 silly gunzTarPerm modified mode [ 'examples/web_server.js', 438, 420 ]
263 silly gunzTarPerm extractEntry examples/multi2.js
264 silly gunzTarPerm modified mode [ 'examples/multi2.js', 438, 420 ]
265 silly gunzTarPerm extractEntry changelog.md
266 silly gunzTarPerm modified mode [ 'changelog.md', 438, 420 ]
267 verbose read json d:\project\chess\server\node_modules\hiredis\package.json
268 silly lockFile 2440990b-hess-server-node-modules-hiredis d:\project\chess\server\node_modules\hiredis
269 silly lockFile 2440990b-hess-server-node-modules-hiredis d:\project\chess\server\node_modules\hiredis
270 silly lockFile 606fc892-cache-hiredis-0-1-15-package-tgz C:\Users\Tuan Minh\AppData\Roaming\npm-cache\hiredis\0.1.15\package.tgz
271 silly lockFile 606fc892-cache-hiredis-0-1-15-package-tgz C:\Users\Tuan Minh\AppData\Roaming\npm-cache\hiredis\0.1.15\package.tgz
272 info preinstall hiredis@0.1.15
273 verbose from cache d:\project\chess\server\node_modules\hiredis\package.json
274 verbose readDependencies using package.json deps
275 verbose from cache d:\project\chess\server\node_modules\hiredis\package.json
276 verbose readDependencies using package.json deps
277 verbose cache add [ 'bindings@*', null ]
278 verbose cache add name=undefined spec="bindings@*" args=["bindings@*",null]
279 verbose parsed url { protocol: null,
279 verbose parsed url   slashes: null,
279 verbose parsed url   auth: null,
279 verbose parsed url   host: null,
279 verbose parsed url   port: null,
279 verbose parsed url   hostname: null,
279 verbose parsed url   hash: null,
279 verbose parsed url   search: null,
279 verbose parsed url   query: null,
279 verbose parsed url   pathname: 'bindings@*',
279 verbose parsed url   path: 'bindings@*',
279 verbose parsed url   href: 'bindings@*' }
280 verbose cache add name="bindings" spec="*" args=["bindings","*"]
281 verbose parsed url { protocol: null,
281 verbose parsed url   slashes: null,
281 verbose parsed url   auth: null,
281 verbose parsed url   host: null,
281 verbose parsed url   port: null,
281 verbose parsed url   hostname: null,
281 verbose parsed url   hash: null,
281 verbose parsed url   search: null,
281 verbose parsed url   query: null,
281 verbose parsed url   pathname: '*',
281 verbose parsed url   path: '*',
281 verbose parsed url   href: '*' }
282 verbose addNamed [ 'bindings', '*' ]
283 verbose addNamed [ null, '' ]
284 silly lockFile a3858fc2-bindings bindings@*
285 verbose lock bindings@* C:\Users\Tuan Minh\AppData\Roaming\npm-cache\a3858fc2-bindings.lock
286 silly addNameRange { name: 'bindings', range: '', hasData: false }
287 verbose url raw bindings
288 verbose url resolving [ 'https://registry.npmjs.org/', './bindings' ]
289 verbose url resolved https://registry.npmjs.org/bindings
290 info trying registry request attempt 1 at 00:11:40
291 verbose etag "7T3K5G7IPKYYUOD04UHNCJDA6"
292 http GET https://registry.npmjs.org/bindings
293 verbose read json d:\project\chess\server\node_modules\redis\package.json
294 silly lockFile 47e1f1ef--chess-server-node-modules-redis d:\project\chess\server\node_modules\redis
295 silly lockFile 47e1f1ef--chess-server-node-modules-redis d:\project\chess\server\node_modules\redis
296 silly lockFile 4b70c2b0-pm-cache-redis-0-8-5-package-tgz C:\Users\Tuan Minh\AppData\Roaming\npm-cache\redis\0.8.5\package.tgz
297 silly lockFile 4b70c2b0-pm-cache-redis-0-8-5-package-tgz C:\Users\Tuan Minh\AppData\Roaming\npm-cache\redis\0.8.5\package.tgz
298 info preinstall redis@0.8.5
299 verbose from cache d:\project\chess\server\node_modules\redis\package.json
300 verbose readDependencies using package.json deps
301 verbose from cache d:\project\chess\server\node_modules\redis\package.json
302 verbose readDependencies using package.json deps
303 silly resolved []
304 verbose about to build d:\project\chess\server\node_modules\redis
305 info build d:\project\chess\server\node_modules\redis
306 verbose from cache d:\project\chess\server\node_modules\redis\package.json
307 verbose linkStuff [ false,
307 verbose linkStuff   false,
307 verbose linkStuff   false,
307 verbose linkStuff   'd:\\project\\chess\\server\\node_modules' ]
308 info linkStuff redis@0.8.5
309 verbose linkBins redis@0.8.5
310 verbose linkMans redis@0.8.5
311 verbose rebuildBundles redis@0.8.5
312 info install redis@0.8.5
313 info postinstall redis@0.8.5
314 http 304 https://registry.npmjs.org/bindings
315 silly registry.get cb [ 304,
315 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
315 silly registry.get     etag: '"7T3K5G7IPKYYUOD04UHNCJDA6"',
315 silly registry.get     date: 'Wed, 02 Oct 2013 17:11:46 GMT',
315 silly registry.get     'content-length': '0' } ]
316 verbose etag bindings from cache
317 silly addNameRange number 2 { name: 'bindings', range: '', hasData: true }
318 silly addNameRange versions [ 'bindings',
318 silly addNameRange   [ '0.0.1',
318 silly addNameRange     '0.1.0',
318 silly addNameRange     '0.1.1',
318 silly addNameRange     '0.2.0',
318 silly addNameRange     '0.2.1',
318 silly addNameRange     '0.2.2',
318 silly addNameRange     '0.2.3',
318 silly addNameRange     '0.2.4',
318 silly addNameRange     '0.3.0',
318 silly addNameRange     '0.4.0',
318 silly addNameRange     '1.0.0',
318 silly addNameRange     '1.1.0',
318 silly addNameRange     '1.1.1' ] ]
319 verbose addNamed [ 'bindings', '1.1.1' ]
320 verbose addNamed [ '1.1.1', '1.1.1' ]
321 silly lockFile 52dd60a7-bindings-1-1-1 bindings@1.1.1
322 verbose lock bindings@1.1.1 C:\Users\Tuan Minh\AppData\Roaming\npm-cache\52dd60a7-bindings-1-1-1.lock
323 verbose read json C:\Users\Tuan Minh\AppData\Roaming\npm-cache\bindings\1.1.1\package\package.json
324 silly lockFile 52dd60a7-bindings-1-1-1 bindings@1.1.1
325 silly lockFile 52dd60a7-bindings-1-1-1 bindings@1.1.1
326 silly lockFile a3858fc2-bindings bindings@*
327 silly lockFile a3858fc2-bindings bindings@*
328 silly resolved [ { name: 'bindings',
328 silly resolved     description: 'Helper module for loading your native module\'s .node file',
328 silly resolved     keywords: [ 'native', 'addon', 'bindings', 'gyp', 'waf', 'c', 'c++' ],
328 silly resolved     version: '1.1.1',
328 silly resolved     author:
328 silly resolved      { name: 'Nathan Rajlich',
328 silly resolved        email: 'nathan@tootallnate.net',
328 silly resolved        url: 'http://tootallnate.net' },
328 silly resolved     repository:
328 silly resolved      { type: 'git',
328 silly resolved        url: 'git://github.com/TooTallNate/node-bindings.git' },
328 silly resolved     main: './bindings.js',
328 silly resolved     readme: 'node-bindings\n=============\n### Helper module for loading your native module\'s .node file\n\nThis is a helper module for authors of Node.js native addon modules.\nIt is basically the "swiss army knife" of `require()`ing your native module\'s\n`.node` file.\n\nThroughout the course of Node\'s native addon history, addons have ended up being\ncompiled in a variety of different places, depending on which build tool and which\nversion of node was used. To make matters worse, now the _gyp_ build tool can\nproduce either a _Release_ or _Debug_ build, each being built into different\nlocations.\n\nThis module checks _all_ the possible locations that a native addon would be built\nat, and returns the first one that loads successfully.\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install bindings\n```\n\nOr add it to the `"dependencies"` section of your _package.json_ file.\n\n\nExample\n-------\n\n`require()`ing the proper bindings file for the current node version, platform\nand architecture is as simple as:\n\n``` js\nvar bindings = require(\'bindings\')(\'binding.node\')\n\n// Use your bindings defined in your C files\nbindings.your_c_function()\n```\n\n\nNice Error Output\n-----------------\n\nWhen the `.node` file could not be loaded, `node-bindings` throws an Error with\na nice error message telling you exactly what was tried. You can also check the\n`err.tries` Array property.\n\n```\nError: Could not load the bindings file. Tried:\n → /Users/nrajlich/ref/build/binding.node\n → /Users/nrajlich/ref/build/Debug/binding.node\n → /Users/nrajlich/ref/build/Release/binding.node\n → /Users/nrajlich/ref/out/Debug/binding.node\n → /Users/nrajlich/ref/Debug/binding.node\n → /Users/nrajlich/ref/out/Release/binding.node\n → /Users/nrajlich/ref/Release/binding.node\n → /Users/nrajlich/ref/build/default/binding.node\n → /Users/nrajlich/ref/compiled/0.8.2/darwin/x64/binding.node\n    at bindings (/Users/nrajlich/ref/node_modules/bindings/bindings.js:84:13)\n    at Object.<anonymous> (/Users/nrajlich/ref/lib/ref.js:5:47)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    ...\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
328 silly resolved     readmeFilename: 'README.md',
328 silly resolved     _id: 'bindings@1.1.1',
328 silly resolved     _from: 'bindings@*' } ]
329 info install bindings@1.1.1 into d:\project\chess\server\node_modules\hiredis
330 info installOne bindings@1.1.1
331 verbose from cache C:\Users\Tuan Minh\AppData\Roaming\npm-cache\bindings\1.1.1\package\package.json
332 info d:\project\chess\server\node_modules\hiredis\node_modules\bindings unbuild
333 verbose read json d:\project\chess\server\node_modules\hiredis\node_modules\bindings\package.json
334 verbose tar unpack C:\Users\Tuan Minh\AppData\Roaming\npm-cache\bindings\1.1.1\package.tgz
335 silly lockFile 03e95aa0-es-hiredis-node-modules-bindings d:\project\chess\server\node_modules\hiredis\node_modules\bindings
336 verbose lock d:\project\chess\server\node_modules\hiredis\node_modules\bindings C:\Users\Tuan Minh\AppData\Roaming\npm-cache\03e95aa0-es-hiredis-node-modules-bindings.lock
337 silly lockFile 67a67f13-cache-bindings-1-1-1-package-tgz C:\Users\Tuan Minh\AppData\Roaming\npm-cache\bindings\1.1.1\package.tgz
338 verbose lock C:\Users\Tuan Minh\AppData\Roaming\npm-cache\bindings\1.1.1\package.tgz C:\Users\Tuan Minh\AppData\Roaming\npm-cache\67a67f13-cache-bindings-1-1-1-package-tgz.lock
339 silly gunzTarPerm modes [ '755', '644' ]
340 silly gunzTarPerm extractEntry package.json
341 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
342 silly gunzTarPerm extractEntry README.md
343 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
344 silly gunzTarPerm extractEntry bindings.js
345 silly gunzTarPerm modified mode [ 'bindings.js', 438, 420 ]
346 verbose read json d:\project\chess\server\node_modules\hiredis\node_modules\bindings\package.json
347 silly lockFile 03e95aa0-es-hiredis-node-modules-bindings d:\project\chess\server\node_modules\hiredis\node_modules\bindings
348 silly lockFile 03e95aa0-es-hiredis-node-modules-bindings d:\project\chess\server\node_modules\hiredis\node_modules\bindings
349 silly lockFile 67a67f13-cache-bindings-1-1-1-package-tgz C:\Users\Tuan Minh\AppData\Roaming\npm-cache\bindings\1.1.1\package.tgz
350 silly lockFile 67a67f13-cache-bindings-1-1-1-package-tgz C:\Users\Tuan Minh\AppData\Roaming\npm-cache\bindings\1.1.1\package.tgz
351 info preinstall bindings@1.1.1
352 verbose from cache d:\project\chess\server\node_modules\hiredis\node_modules\bindings\package.json
353 verbose readDependencies using package.json deps
354 verbose from cache d:\project\chess\server\node_modules\hiredis\node_modules\bindings\package.json
355 verbose readDependencies using package.json deps
356 silly resolved []
357 verbose about to build d:\project\chess\server\node_modules\hiredis\node_modules\bindings
358 info build d:\project\chess\server\node_modules\hiredis\node_modules\bindings
359 verbose from cache d:\project\chess\server\node_modules\hiredis\node_modules\bindings\package.json
360 verbose linkStuff [ false,
360 verbose linkStuff   false,
360 verbose linkStuff   false,
360 verbose linkStuff   'd:\\project\\chess\\server\\node_modules\\hiredis\\node_modules' ]
361 info linkStuff bindings@1.1.1
362 verbose linkBins bindings@1.1.1
363 verbose linkMans bindings@1.1.1
364 verbose rebuildBundles bindings@1.1.1
365 info install bindings@1.1.1
366 info postinstall bindings@1.1.1
367 verbose about to build d:\project\chess\server\node_modules\hiredis
368 info build d:\project\chess\server\node_modules\hiredis
369 verbose from cache d:\project\chess\server\node_modules\hiredis\package.json
370 verbose linkStuff [ false,
370 verbose linkStuff   false,
370 verbose linkStuff   false,
370 verbose linkStuff   'd:\\project\\chess\\server\\node_modules' ]
371 info linkStuff hiredis@0.1.15
372 verbose linkBins hiredis@0.1.15
373 verbose linkMans hiredis@0.1.15
374 verbose rebuildBundles hiredis@0.1.15
375 verbose rebuildBundles [ 'bindings' ]
376 info install hiredis@0.1.15
377 verbose unsafe-perm in lifecycle true
378 silly exec cmd "/c" "node-gyp rebuild"
379 silly cmd,/c,node-gyp rebuild,d:\project\chess\server\node_modules\hiredis spawning
380 info hiredis@0.1.15 Failed to exec install script
381 info d:\project\chess\server\node_modules\hiredis unbuild
382 verbose from cache d:\project\chess\server\node_modules\hiredis\package.json
383 info preuninstall hiredis@0.1.15
384 info uninstall hiredis@0.1.15
385 verbose true,d:\project\chess\server\node_modules,d:\project\chess\server\node_modules unbuild hiredis@0.1.15
386 info postuninstall hiredis@0.1.15
387 error hiredis@0.1.15 install: `node-gyp rebuild`
387 error `cmd "/c" "node-gyp rebuild"` failed with 1
388 error Failed at the hiredis@0.1.15 install script.
388 error This is most likely a problem with the hiredis package,
388 error not with npm itself.
388 error Tell the author that this fails on your system:
388 error     node-gyp rebuild
388 error You can get their info via:
388 error     npm owner ls hiredis
388 error There is likely additional logging output above.
389 error System Windows_NT 6.1.7601
390 error command "c:\\Program Files\\nodejs\\node.exe" "c:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "hiredis" "redis"
391 error cwd d:\project\chess\server
392 error node -v v0.10.1
393 error npm -v 1.2.15
394 error code ELIFECYCLE
395 verbose exit [ 1, true ]
